== Publishing JBDS Installers & update sites for QE ==

0. Set the URLs in the discovery site so they point to the correct versions:

  https://jenkins.mw.lab.eng.bos.redhat.com/hudson/view/DevStudio/view/DevStudio_7.0.kepler/job/jbosstools-discovery_41/configure

    http://download.jboss.org/jbosstools/updates/JBossTools-4.1.1.Alpha1.core/ # a, b, c...
    http://www.qa.jboss.com/binaries/RHDS/updates/development/7.1.0.Alpha1.core/ # a, b, c...

  Respin.

# TODO in product/features/com.jboss.jbds.product.feature/p2.inf
# TODO when releasing GA make sure to :%s/development/stable/g and :%s/7.0-staging/7.0/g

1. ssh to dev01.mw.lab.eng.bos.redhat.com, sudo to hudson user

2. copy the last good JBDS Core update site, discovery site + installer (no symlinks to avoid accidental overwrites):

  # can do these next 3 steps in parallel
  
  version=7.1.0.Alpha1 # a, b, c...
  scpr /qa/services/http/binaries/RHDS/builds/staging/devstudio.product_71/installer/* /qa/services/http/binaries/RHDS/builds/development/${version}.installer/
  cd /qa/services/http/binaries/RHDS/builds/development/; find . -maxdepth 1 -type d -name "${version}*" | grep ${version}; find . -maxdepth 1 -type d -name "${version}*" | sed "s#\.# >> http://www.qa.jboss.com/binaries/RHDS/builds/development#" | egrep ">>|${version}"

  version=7.1.0.Alpha1 # a, b, c...
  scpr /qa/services/http/binaries/RHDS/builds/staging/devstudio.product_71/all/repo/* /qa/services/http/binaries/RHDS/updates/development/${version}.core/
  cd /qa/services/http/binaries/RHDS/updates/development/; find . -maxdepth 1 -type d -name "${version}*" | grep ${version}; find . -maxdepth 1 -type d -name "${version}*" | sed "s#\.# >> http://www.qa.jboss.com/binaries/RHDS/updates/development#" | egrep ">>|${version}"

  # Make sure that the parameters fed into the Discovery job are correct; respin if necessary.
  # https://jenkins.mw.lab.eng.bos.redhat.com/hudson/view/DevStudio/view/DevStudio_7.0.kepler/job/jbosstools-discovery_41/
  version=7.1.0.Alpha1 # a, b, c...
  scpr /qa/services/http/binaries/RHDS/discovery/nightly/core/4.1.kepler/* /qa/services/http/binaries/RHDS/discovery/development/${version}/
  # JBDS-2551 fix composite discovery site
  cd /qa/services/http/binaries/RHDS/discovery/development/${version}/
  for c in compositeContent.xml compositeArtifacts.xml; do 
  sed -i -e "s#http://www.qa.jboss.com/binaries/RHDS/builds/staging/devstudio.product.\+/all/.\+/#http://www.qa.jboss.com/binaries/RHDS/updates/development/${version}.core/#" $c
  sed -i -e "s#http://www.qa.jboss.com/binaries/RHDS/updates/development/${version}.core/repo/#http://www.qa.jboss.com/binaries/RHDS/updates/development/${version}.core/#" $c
  cat $c | egrep "${version}"
  done
  cd /qa/services/http/binaries/RHDS/discovery/development/; find . -maxdepth 1 -type d -name "${version}*" | grep ${version}; find . -maxdepth 1 -type d -name "${version}*" | sed "s#\.# >> http://www.qa.jboss.com/binaries/RHDS/discovery/development#" | egrep ">>|${version}"

3. Stage files on wallace (pull from dev01):

  ** SKIP THIS FOR ALPHA1 and ALPHA2 **

  ssh nboldt@wallace
  alias   scpr='rsync -aPrz --rsh=ssh'
  
  (in parallel terminal connections!)
  
  version=7.1.0.Alpha1 # a, b, c...
  cd /mnt/devstudio/updates/7.0.0
  scpr nboldt@dev01.mw.lab.eng.bos.redhat.com:~/RHDS/updates/development/${version}.core .
  chmod -R g+w /mnt/devstudio/updates/${version}.core 2>/dev/null
  chgrp -R devstudio /mnt/devstudio/updates/${version}.core 2>/dev/null

  #version=7.1.0.Alpha1 # a, b, c...
  # cd /mnt/devstudio/updates/7.0.0
  #scpr nboldt@dev01.mw.lab.eng.bos.redhat.com:~/RHDS/updates/development/${version}.techpreview .
  #scpr nboldt@dev01.mw.lab.eng.bos.redhat.com:~/RHDS/updates/development/${version}.extras .

  # TODO: verify correct URL and filename for the target zip
  version=7.1.0.Alpha1 # a, b, c...
  cd /mnt/devstudio/updates/7.0.0
  TARGET_PLATFORM_VERSION=4.30.5.Final
  scpr nboldt@dev01.mw.lab.eng.bos.redhat.com:/qa/services/http/binaries/RHDS/targetplatforms/jbdevstudiotarget/${TARGET_PLATFORM_VERSION}/jbdevstudiotarget-${TARGET_PLATFORM_VERSION}.zip . 
  unzip -d ${version}.target-platform jbdevstudiotarget-${TARGET_PLATFORM_VERSION}.zip
  chmod -R g+w /mnt/devstudio/updates/${version}.target-platform 2>/dev/null
  chgrp -R devstudio /mnt/devstudio/updates/${version}.target-platform 2>/dev/null

4. (while previous step is running) update composite*.xml files in updates/7.0-staging/ to point at new locations (update in SVN too: http://svn.jboss.org/repos/devstudio/trunk/devstudio.jboss.com/updates/7.0-staging/)

  ** SKIP THIS FOR ALPHA1 and ALPHA2 **

  # NOTE: ~/truu/devstudio.jboss.com is a symlink on my local machine to this folder in github: https://github.com/jbdevstudio/jbdevstudio-website/tree/master/content
  # "gw1" uses special aliases/scripts/shortcuts. Basically, we want to follow correct github workflows so that commits are pushed to user's fork, then later pull-requested (and the PR applied)
  # "gw2" will create the PR, "gw3" will apply it, and "gw4" will delete the topic branch locally and in my fork
  # the 4 steps are captured here: https://gist.github.com/nickboldt/4111850
  alias   ga='git add'
  alias   stat='git status'
  alias   gd='git diff --color=always -w'
  alias   scpr='rsync -aPrz --rsh=ssh'
  alias   ci='git commit -m'

  cd ~/truu/devstudio.jboss.com/updates/7.0-staging/
  previous=7.0.0.GA # a, b, c...
  version=7.1.0.Alpha1 # a, b, c...
  topic="release-${version}-to-staging";branch=master; gw1
  now=`date +%s000`
  for d in *.*ml extras/*.*ml central/core/*.*ml; do
  sed -i -e "s#${previous}#${version}#g" -e "s#<property name='p2.timestamp' value='[0-9]\+'/>#<property name='p2.timestamp' value='${now}'/>#g" $d; done

  # update https://devstudio.jboss.com/updates/7.0-staging/devstudio-directory.xml to point at new Core discovery jar.
  # Latest discovery site is here: http://www.qa.jboss.com/binaries/RHDS/discovery/development/${version}
  version=7.1.0.Alpha1 # a, b, c...
  # get new plugin
  cd ~/truu/devstudio.jboss.com/updates/7.0-staging/discovery/
  #git rm -f com.jboss.jbds.central.discovery_*.jar
  wget -q -nc http://www.qa.jboss.com/binaries/RHDS/discovery/development/${version}/devstudio-directory.xml
  newJar=$(cat devstudio-directory.xml | grep entry | sed -e "s#.\+plugins#plugins#g" | sed -e "s#\.jar.\+#.jar#g"); echo $newJar
  wget -q -nc http://www.qa.jboss.com/binaries/RHDS/discovery/development/${version}/${newJar}
  newJar=${newJar/plugins/discovery}; echo $newJar
  rm -f ~/truu/devstudio.jboss.com/updates/7.0-staging/discovery/devstudio-directory.xml

  # update XML
  cd ~/truu/devstudio.jboss.com/updates/7.0-staging/
  sed -i -e "s#discovery/com.jboss.jbds.central.discovery_.\+\.jar#${newJar}#g" devstudio-directory.xml
  
  unzip -q -d ~/truu/devstudio.jboss.com/updates/7.0-staging/${newJar}{_,}
  pushd ~/truu/devstudio.jboss.com/updates/7.0-staging/${newJar}_ >/dev/null 

  # IF THIS IS pre-GA, ensure that your plugin points to the STAGING URL, not the RELEASE one:
  sed -i "s#https://devstudio.jboss.com/updates/7.0/central/core/#https://devstudio.jboss.com/updates/7.0-staging/central/core/#g" plugin.xml
  sed -i "s#https://devstudio.jboss.com/updates/7.0-development/central/core/#https://devstudio.jboss.com/updates/7.0-staging/central/core/#g" plugin.xml

  # IF THIS IS GA, ensure that your plugin points to the RELEASE URL, not the STAGING one:
  #sed -i "s#https://devstudio.jboss.com/updates/7.0-staging/central/core/#https://devstudio.jboss.com/updates/7.0/central/core/#g" plugin.xml
  #sed -i "s#https://devstudio.jboss.com/updates/7.0-development/central/core/#https://devstudio.jboss.com/updates/7.0/central/core/#g" plugin.xml

  zip -u ~/truu/devstudio.jboss.com/updates/7.0-staging/${newJar} plugin.xml
  popd >/dev/null
  rm -fr ~/truu/devstudio.jboss.com/updates/7.0-staging/${newJar}_

  # IF THIS IS GA, ensure the new plugin is also in 7.0/ and 7.0-development/ as well as 7.0-staging/
  #alias cp=cp;
  #cp -f ~/truu/devstudio.jboss.com/updates/7.0-staging/${newJar} ~/truu/devstudio.jboss.com/updates/7.0-development/${newJar}
  #cp -f ~/truu/devstudio.jboss.com/updates/7.0-staging/devstudio-directory.xml ~/truu/devstudio.jboss.com/updates/7.0-development/devstudio-directory.xml

  #cp -f ~/truu/devstudio.jboss.com/updates/7.0-staging/${newJar} ~/truu/devstudio.jboss.com/updates/7.0/${newJar}
  #cp -f ~/truu/devstudio.jboss.com/updates/7.0-staging/devstudio-directory.xml ~/truu/devstudio.jboss.com/updates/7.0/devstudio-directory.xml

  # check in / sync changes
  ga ${newJar}; stat .
  gd .
  
  ci "release ${version} for QE: add new discovery plugin ${newJar} + update devstudio-directory.xml + update HTML pages" . discovery/*.jar
  gw2;gw3;gw4

  scpr ~/truu/devstudio.jboss.com/updates/7.0-staging/* $WALL/updates/7.0-staging/

  # IF THIS IS GA
  #cd ~/truu/devstudio.jboss.com/updates/7.0/
  #ga ${newJar}; stat .
  #gd .
  #ci "release ${version} for QE: add new discovery plugin ${newJar} + update devstudio-directory.xml" . discovery/*.jar
  #scpr ~/truu/devstudio.jboss.com/updates/7.0/* $WALL/updates/7.0/

6. Fix file permissions on wallace (pull from dev01):

  ** SKIP THIS FOR ALPHA1 and ALPHA2 **

  ssh nboldt@wallace.intranet.prod.int.rdu2.redhat.com "chmod -R g+w /mnt/devstudio/updates/7.0* 2>/dev/null; chgrp -R devstudio /mnt/devstudio/updates/7.0* 2>/dev/null"

7. Commit updated docs & push:

  cd ~/truu/doc/release_guide
  version=7.1.0.Alpha1 # a, b, c...
  topic="release-${version}";branch=master; gw1
  ci "update release guide for release of ${version} for QE" .
  gw2;gw3;gw4

--------------------------------------------

== EMAIL TEMPLATE ==

# To: jbds-pm-list <jbds-pm-list@redhat.com>, "external-exadel-list@redhat.com" <external-exadel-list@redhat.com>

version=7.1.0.Alpha1 # a, b, c...
respin="respin-"
TARGET_PLATFORM_VERSION_MIN=4.30.5.Final
TARGET_PLATFORM_VERSION_MAX=4.31.0.Alpha1
version2=7.1.0.Alpha1 # no respin suffix here
version3=4.1.1.Alpha1 # no respin suffix here
echo "
Subject: 

JBDS ${version} Core bits available for QE testing

Body:

As always, these are not FINAL bits, but preliminary results for QE testing. Not for redistribution to customers. Links in this section are all internal (VPN required), except for the target platform.

Universal Installers (Internal):

http://www.qa.jboss.com/binaries/RHDS/builds/development/${version}.installer/

Update Sites (Internal):

http://www.qa.jboss.com/binaries/RHDS/updates/development/${version}.core/

JBoss Central (Internal):

To test this version of Central, add this to your ~/jbdevstudio/studio/jbdevstudio.ini file after the -vmargs line:

-Djboss.discovery.directory.url=http://www.qa.jboss.com/binaries/RHDS/discovery/development/${version}/devstudio-directory.xml
     -Djboss.discovery.site.url=http://www.qa.jboss.com/binaries/RHDS/discovery/development/${version}/

Target Platforms (Public):

http://download.jboss.org/jbosstools/targetplatforms/jbdevstudiotarget/${TARGET_PLATFORM_VERSION_MIN}/
http://download.jboss.org/jbosstools/targetplatforms/jbdevstudiotarget/${TARGET_PLATFORM_VERSION_MAX}/

--

  ** SKIP THIS FOR ALPHA1 and ALPHA2 **

The sites below will take about 1 hour to appear. These are public-facing for staging purposes (no VPN required). 

Update Sites (Public, Staging):

https://devstudio.jboss.com/updates/7.0-staging/ (includes ${version} Core + Target Platform)
https://devstudio.jboss.com/updates/7.0-staging/central/core/ (includes ${version} Core + Target Platform + 3rd party site mirrors)

JBoss Central (Public, Staging):

To test this version of Central, add this to your ~/jbdevstudio/studio/jbdevstudio.ini file after the -vmargs line:

-Djboss.discovery.directory.url=https://devstudio.jboss.com/updates/7.0-staging/devstudio-directory.xml
     -Djboss.discovery.site.url=https://devstudio.jboss.com/updates/7.0-staging/

--

Schedule / Upcoming Releases:

https://issues.jboss.org/browse/JBIDE#selectedTab=com.atlassian.jira.plugin.system.project%3Aversions-panel

--

Note: if your DNS won't resolve it, use 10.16.89.17 instead of www.qa.jboss.com.

"
if [[ $respin != "respin-" ]]; then
echo " 
Changes prompting this $respin are:
"'
https://issues.jboss.org/issues/?jql=labels%20in%20%28%22'${respin}'%22%29%20and%20%28%28project%20in%20%28%22JBDS%22%29%20and%20fixversion%20in%20%28%22'${version2}'%22%29%29%20or%20%28project%20in%20%28%22JBIDE%22%2C%22TOOLSDOC%22%29%20and%20fixversion%20in%20%28%22'${version3}'%22%29%29%29
'
fi
