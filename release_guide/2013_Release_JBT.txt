# "gw1" uses special aliases/scripts/shortcuts. Basically, we want to follow correct github workflows so that commits are pushed to user's fork, then later pull-requested (and the PR applied)
# "gw2" will create the PR, "gw3" will apply it, and "gw4" will delete the topic branch locally and in my fork
# the 4 steps are captured here: https://gist.github.com/nickboldt/4111850
# "stat" is short for "git status"; "gd" is short for "git diff"; "ga" is short for "git add"

1. Move/rename 6 files (3 zips, 3 md5sums) [JBT 3.2.x was 3 zips, 3 md5sums = 6 files] (no longer includes SOA Tooling zip/md5 file) into http://download.jboss.org/jbosstools/builds/development/sf.net/

  stream=41
  version=4.1.0.Beta2
  version2=4.1.0.Beta2b; # a, b...
  buildID1=$(echo "ls 20*" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds/development/${version2}.core/ 2>&1 | grep "20.\+" | grep -v sftp | sort | tail -1); buildID1=${buildID1%%/*}
  echo "Latest build: ${buildID1}"

  echo "mkdir development/sf.net/${version}" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds
  echo "rename development/${version2}.core/${buildID1}/components/jbosstools-hibernate_${stream}-Update-SNAPSHOT.zip                   development/sf.net/${version}/hibernatetools-Update-${version}_${buildID1}.zip"     | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds
  echo "rename development/${version2}.core/${buildID1}/components/jbosstools-hibernate_${stream}-Update-SNAPSHOT.zip.MD5               development/sf.net/${version}/hibernatetools-Update-${version}_${buildID1}.zip.MD5" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds
  echo "rename development/${version2}.core/${buildID1}/all/jbosstools-build-sites.aggregate.site_${stream}-Update-${buildID1}.zip      development/sf.net/${version}/jbosstools-Update-${version}_${buildID1}.zip"         | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds
  echo "rename development/${version2}.core/${buildID1}/all/jbosstools-build-sites.aggregate.site_${stream}-Update-${buildID1}.zip.MD5  development/sf.net/${version}/jbosstools-Update-${version}_${buildID1}.zip.MD5"     | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds
  echo "rename development/${version2}.core/${buildID1}/all/jbosstools-build-sites.aggregate.site_${stream}-Sources-${buildID1}.zip     development/sf.net/${version}/jbosstools-Sources-${version}_${buildID1}.zip"        | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds
  echo "rename development/${version2}.core/${buildID1}/all/jbosstools-build-sites.aggregate.site_${stream}-Sources-${buildID1}.zip.MD5 development/sf.net/${version}/jbosstools-Sources-${version}_${buildID1}.zip.MD5"    | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds

  # now get file sizes for use with Magnolia site later (www.jboss.org/tools)
  wget -q http://download.jboss.org/jbosstools/builds/development/sf.net/${version} -k -O /tmp/index.html
  echo "  >>>  http://download.jboss.org/jbosstools/builds/development/sf.net/${version}/"
  for f in $(cat /tmp/index.html | egrep -v "C=D|title>|h1>" | egrep "${version}"); do
    if [[ ${f/zip/} != ${f} ]]; then 
      echo -n "  "
      echo -n $f | sed 's#.\+href="\([^"]\+\)".\+#\1#g' | sed "s#.\+${version}/##g" | sed 's#".\+##g';
      if [[ ${f/MD5/} != ${f} ]]; then echo ""; echo ""; fi
    fi
    if [[ ${f/M</} != ${f} ]]; then echo -n " :: "; echo $f | sed 's#.\+>\([^<>]\)#\1#g' | sed 's#\([^<>]\)<.\+#\1#g'; fi
  done
  rm -f /tmp/index.html

  # end up with somtehing like this:
  hibernatetools-Update-4.1.0.Beta2_2013-06-25_22-05-55-B368.zip :: 78M
  hibernatetools-Update-4.1.0.Beta2_2013-06-25_22-05-55-B368.zip.MD5

  jbosstools-Sources-4.1.0.Beta2_2013-06-25_22-05-55-B368.zip :: 133M
  jbosstools-Sources-4.1.0.Beta2_2013-06-25_22-05-55-B368.zip.MD5

  jbosstools-Update-4.1.0.Beta2_2013-06-25_22-05-55-B368.zip :: 400M
  jbosstools-Update-4.1.0.Beta2_2013-06-25_22-05-55-B368.zip.MD5

2. Pull files to SF after logging in via SSH (Downloaded: 8 files, 353M in 4m 22s (1.35 MB/s)):

  ssh -t nickboldt,jboss@shell.sourceforge.net create # wait until this is done before running the next lines
  version=4.1.0.x # if this is a Final build, use 4.1.x instead of 4.1.0.x
  version2=4.1.0.Beta2
  mkdir -p /home/users/n/ni/nickboldt/jboss/JBossTools/JBossTools${version}
  cd /home/users/n/ni/nickboldt/jboss/JBossTools/JBossTools${version}
  wget http://download.jboss.org/jbosstools/builds/development/sf.net/${version2} -k -O /tmp/index.html
  for f in $(cat /tmp/index.html | egrep -v "C=D|title>|h1>" | egrep "${version2}" | sed 's#.\+href="\([^"]\+\)".\+#\1#g'); do wget -nc $f; done
  rm -f /tmp/index.html
  exit
  
* While uploading... *
  
3. Create release notes file & rename, then upload to sf.net:
    https://issues.jboss.org/secure/ConfigureReport!default.jspa?selectedProjectId=10020&projectOrFilterId=project-10020&projectOrFilterName=Tools%20%28JBoss%20Tools%29&reportKey=org.jboss.labs.jira.plugin.release-notes-report-plugin:releasenotes
  --> select release ("4.1.0.Beta2"), type of issues ("All"), and style ("HTML").
  --> select text and paste into file.

  version=4.1.0.x # if this is a Final build, use 4.1.x instead of 4.1.0.x
  version2=4.1.0.Beta2
  cd /home/nboldt/truu/doc/release_guide/ # in devstudio SVN
  prev=$(find . -name "zz_Release_Notes_4.1*"); prev=${prev:2}; echo $prev
  sublime zz_Release_Notes_4.1*.html # or use gedit, vim, etc.
  git mv zz_Release_Notes_4.1*.html zz_Release_Notes_${version2}.readme.html
  # for milestones
  scp /home/nboldt/truu/doc/release_guide/zz_Release_Notes_${version2}.readme.html "nickboldt,jboss@frs.sourceforge.net:/home/frs/project/j/jb/jboss/JBossTools/JBossTools4.1.0.x/"
  # or, for Final builds
  scp /home/nboldt/truu/doc/release_guide/zz_Release_Notes_${version2}.readme.html "nickboldt,jboss@frs.sourceforge.net:/home/frs/project/j/jb/jboss/JBossTools/JBossTools4.1.x/"

  echo ">>> http://sourceforge.net/projects/jboss/files/JBossTools/JBossTools${version}/zz_Release_Notes_${version2}.readme.html/download"

  topic="release-${version2}"; branch=master; gw1
  ci "generate release notes for ${version2} release" ${prev} zz_Release_Notes_${version2}.readme.html
  gw2;gw3;gw4

4. Check contents of bookmarks.xml file, and upload to sf.net if changed:

  vi  /home/nboldt/truu/doc/release_guide/jbosstools4.1_bookmarks.xml
  scp /home/nboldt/truu/doc/release_guide/jbosstools4.1_bookmarks.xml "nickboldt,jboss@frs.sourceforge.net:/home/frs/project/j/jb/jboss/JBossTools/"
----

5. Tweak magnolia pages to link to new files, but do not publish yet

  firefox \
  https://www.jboss.org/author/tools/download
  firefox \
  https://www.jboss.org/author/tools/download/dev \
  https://www.jboss.org/author/tools/download/stable \
  https://www.jboss.org/author/tools/download/installation/update_4_1

  # for Final builds, copy dev/4_1 into stable/4_1, update other pages accordingly.

----

6. (ONLY if necessary) Move Milestonex to Milestone

  version=4.1.0.Beta2
  version2=4.1.0.Beta2b # a, b, c, d...

  # rename discovery site, http://download.jboss.org/jbosstools/discovery/development/${version2}/
  echo "rename development/${version}  development/${version}.DELETEME" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/discovery
  echo "rename development/${version2} development/${version}" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/discovery

  # rename the development build
  echo "rename development/${version}.core  development/${version}.core.DELETEME" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds
  echo "rename development/${version2}.core development/${version}.core" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds

  # make sure this exists - might be only "a" while core is on "c"
  echo "rename development/${version}.webtools  development/${version}.webtools.DELETEME" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds
  echo "rename development/${version2}.webtools development/${version}.webtools" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds

  # rename the update site
  echo "rename JBossTools-${version}.core  JBossTools-${version}.core.DELETEME" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/updates
  echo "rename JBossTools-${version2}.core JBossTools-${version}.core" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/updates

  # make sure this exists - might be only "a" while core is on "c"
  echo "rename JBossTools-${version}.webtools  JBossTools-${version}.webtools.DELETEME" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/updates
  echo "rename JBossTools-${version2}.webtools JBossTools-${version}.webtools" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/updates

  Also, over sftp, delete any old iterations (*.DELETEME) or previous respins that are no longer needed from 

  * tools/discovery/development/
  * tools/updates/JBossTools-*
  * tools/builds/development/

7. Publish new Web Tools site:

  alias   ga='git add'
  alias   stat='git status'
  alias   gd='git diff --color=always -w'
  alias   scpr='rsync -aPrz --rsh=ssh'
  alias   ci='git commit -m'

  previous=4.1.0.Beta1
  version=4.1.0.Beta2 # only use a, b suffix if did not perform rename in step 6 above
  #echo "rename webtools/kepler webtools/kepler.`date +%Y%m%d-%H%M`" | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/updates/
  echo "rename webtools/kepler webtools/kepler_${previous}"         | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/updates/
  echo "rename JBossTools-${version}.webtools webtools/kepler"      | sftp tools@filemgmt.jboss.org:/downloads_htdocs/tools/updates/
  cd ~/tru/download.jboss.org/jbosstools/updates/webtools/kepler/
  rm -f index.html site.xml
  # sometimes the website is slow to refresh, so pull over sftp instead 
  #wget -N http://download.jboss.org/jbosstools/updates/webtools/kepler/index.html
  #wget -N http://download.jboss.org/jbosstools/updates/webtools/kepler/site.xml
  scpr tools@filemgmt.jboss.org:/downloads_htdocs/tools/updates/webtools/kepler/index.html .
  scpr tools@filemgmt.jboss.org:/downloads_htdocs/tools/updates/webtools/kepler/site.xml .

  stat .; gd .
  topic="release-${version2}"; branch=master; gw1
  ci "release ${version} (${version2}) to http://download.jboss.org/jbosstools/updates/webtools/kepler/" index.html site.xml
  gw2;gw3;gw4

  Also, over sftp, delete any old iterations or respins that are no longer needed.

  ** If this is the first milestone release, ensure that upstream project Web Tools (WTP) knows to include this new URL in their server adapter wizard. New bugzilla required! **


8. [8 files] Update composite site metadata (absolute path), Central directory file (absolute path, from http://download.jboss.org/jbosstools/discovery/development/${version}/), and 
             index.html files (absolute paths). Also pull a copy of the updated discovery jar (from http://download.jboss.org/jbosstools/discovery/development/${version}/plugins/).
             And update the pointer to the latest target platform, too.

  previous=4.1.0.Beta1
  version=4.1.0.Beta2
  version2=4.1.0.Beta2 # no a, b, c if renamed above 

  oldTargetPlatform=4.30.5.Alpha5
  newTargetPlatform=4.30.5.Alpha6

  topic="release-target-platform-${newTargetPlatform}"; branch=master; gw1
  pushd ~/tru/download.jboss.org/jbosstools/updates/kepler/
  now=`date +%s000`
  for d in composite*.xml; do
  sed -i -e "s#${oldTargetPlatform}#${newTargetPlatform}#g" $d
  sed -i -e "s#<property name='p2.timestamp' value='[0-9]\+'/>#<property name='p2.timestamp' value='${now}'/>#g" $d
  done
  ci "release ${newTargetPlatform} to http://download.jboss.org/jbosstools/updates/kepler/" .
  popd >/dev/null
  gw2;gw3;gw4

  # push updated target platform to production
  scpr ~/tru/download.jboss.org/jbosstools/updates/kepler/composite*.xml $TOOLS/updates/kepler/

  # -------

  previous=4.1.0.Beta1
  version=4.1.0.Beta2
  version2=4.1.0.Beta2 # no a, b, c if renamed above 

  branch=master; topic="release-development-${version2}"; gw1
  cd ~/tru/download.jboss.org/jbosstools/updates/development/kepler/

  now=`date +%s000`
  for d in composite*.xml; do
  sed -i -e "s#${previous}#${version2}#g" $d
  sed -i -e "s#<property name='p2.timestamp' value='[0-9]\+'/>#<property name='p2.timestamp' value='${now}'/>#g" $d
  done

  rm -f index.html; wget -nc http://download.jboss.org/jbosstools/updates/JBossTools-${version2}.core/index.html
  sed -i -e "s#href=\"#href=\"http://download.jboss.org/jbosstools/updates/JBossTools-${version2}.core/#g" -e "s#href=\"http://download.jboss.org/jbosstools/updates/JBossTools-${version2}.core/http#href=\"http#g" index.html
  
  # update XML
  version=4.1.0.Beta2
  cd ~/tru/download.jboss.org/jbosstools/updates/development/kepler/
  rm -f jbosstools-directory.xml; wget -nc http://download.jboss.org/jbosstools/discovery/development/${version}/jbosstools-directory.xml
  #newJar=plugins/org.jboss.tools.central.discovery_1.0.0.v20120612-0053-H99-Final.jar
  newJar=$(cat jbosstools-directory.xml | grep entry | sed -e "s#.\+plugins/#plugins/#g" | sed -e "s#\.jar.\+#.jar#g"); echo $newJar
  mkdir -p ~/tru/download.jboss.org/jbosstools/updates/development/kepler/plugins
  pushd ~/tru/download.jboss.org/jbosstools/updates/development/kepler/plugins >/dev/null
  wget http://download.jboss.org/jbosstools/discovery/development/${version}/${newJar}
  popd >/dev/null
  
  # IF THIS IS pre-Final, ensure that your plugin points to the STAGING URL, not the RELEASE one:
  unzip -q -d ~/tru/download.jboss.org/jbosstools/updates/development/kepler/${newJar}{_,}
  pushd ~/tru/download.jboss.org/jbosstools/updates/development/kepler/${newJar}_ >/dev/null 
  sed -i "s#http://download.jboss.org/jbosstools/updates/stable/kepler/central/core/#http://download.jboss.org/jbosstools/updates/development/kepler/central/core/#g" plugin.xml
  zip -u ~/tru/download.jboss.org/jbosstools/updates/development/kepler/${newJar} plugin.xml
  popd >/dev/null
  rm -fr ~/tru/download.jboss.org/jbosstools/updates/development/kepler/${newJar}_

  # IF THIS IS Final, ensure that your plugin points to the RELEASE URL, not the STAGING one:
  #unzip -q -d ~/tru/download.jboss.org/jbosstools/updates/development/kepler/${newJar}{_,}
  #pushd ~/tru/download.jboss.org/jbosstools/updates/development/kepler/${newJar}_ >/dev/null 
  #sed -i "s#http://download.jboss.org/jbosstools/updates/development/kepler/central/core/#http://download.jboss.org/jbosstools/updates/stable/kepler/central/core/#g" plugin.xml
  ## *** make sure we do not point at http://download.jboss.org/jbosstools/discovery/development/${version} instead
  #zip -u ~/tru/download.jboss.org/jbosstools/updates/development/kepler/${newJar} plugin.xml
  #popd >/dev/null
  #rm -fr ~/tru/download.jboss.org/jbosstools/updates/development/kepler/${newJar}_

  # check in / sync changes - 4 updated files, 1 new jar, 1 deleted jar
  stat .; gd .
  scpr ~/tru/download.jboss.org/jbosstools/updates/development/kepler/* $TOOLS/updates/development/kepler/
  # TODO: make sure next line works
  git add ${newJar}
  ci "release ${version2} to http://download.jboss.org/jbosstools/updates/development/kepler/; add new discovery plugin ${newJar} + update jbosstools-directory.xml" .
  gw2;gw3;gw4
  

If this is the pre-Final build, ensure that the following files exist:

  http://download.jboss.org/jbosstools/updates/kepler/
  http://download.jboss.org/jbosstools/updates/kepler/compositeArtifacts.xml & compositeContent.xml
  http://download.jboss.org/jbosstools/updates/kepler/extras/compositeArtifacts.xml & compositeContent.xml

  Make sure directory.xml points at a real jar:
    http://download.jboss.org/jbosstools/updates/development/kepler/jbosstools-directory.xml 
    -> http://download.jboss.org/jbosstools/updates/development/kepler/plugins/org.jboss.tools.central.discovery_1.2.0.Beta2-v20130626-1621-B250.jar
    --> to http://download.jboss.org/jbosstools/updates/development/kepler/central/core/
  http://download.jboss.org/jbosstools/updates/development/kepler/compositeArtifacts.xml & compositeContent.xml
  http://download.jboss.org/jbosstools/updates/development/kepler/central/core/compositeArtifacts.xml & compositeContent.xml

If this is the Final build, ensure that the following files exist (copy content from /development/kepler/ so that both the milestone and the release have nearly the same content):

  http://download.jboss.org/jbosstools/updates/stable/kepler/jbosstools-directory.xml
    -> must point at a real plugin, eg., to http://download.jboss.org/jbosstools/discovery/stable/4.1.0.Final/plugins/org.jboss.tools.central.discovery_1.2.0.Final-v20130.....jar
  http://download.jboss.org/jbosstools/updates/stable/kepler/composite*.xml
  http://download.jboss.org/jbosstools/updates/stable/kepler/central/core/composite*.xml

  # and push new/updated files to server too
  scpr ~/tru/download.jboss.org/jbosstools/updates/stable/* $TOOLS/updates/stable/
  # "gw1" uses special aliases/scripts/shortcuts. Basically, we want to follow correct github workflows so that commits are pushed to user's fork, then later pull-requested (and the p-r applied)
  branch=master; topic="release-stable-${version2}"; gw1
  ci "release ${version} to http://download.jboss.org/jbosstools/updates/stable/kepler/; add new discovery plugin ${newJar} + update jbosstools-directory.xml" .
  gw2;gw3;gw4
  
----

9. Review changes:

a. composite sites and Central directory file

  http://download.jboss.org/jbosstools/updates/development/kepler/
  http://download.jboss.org/jbosstools/updates/development/kepler/jbosstools-directory.xml

  http://download.jboss.org/jbosstools/updates/stable/kepler/
  http://download.jboss.org/jbosstools/updates/stable/kepler/jbosstools-directory.xml

b. files on SF

  https://sourceforge.net/projects/jboss/files/JBossTools/JBossTools4.1.0.x/

c. magnolia pages

  https://www.jboss.org/author/tools/download
  https://www.jboss.org/author/tools/download/dev
  https://www.jboss.org/author/tools/download/stable/4_1
  https://www.jboss.org/author/tools/download/installation/update_4_1

----

10. Publish magnolia pages

  https://www.jboss.org/author/

--------------------------------------------

11. Update Eclipse Marketplace (add/remove features)

  Compare list of features here:  http://download.jboss.org/jbosstools/updates/JBossTools-4.1.0.Beta2.core/site.properties (see CoreTools.category.features)
  with features here:       https://marketplace.eclipse.org/node/xxxxxx/edit

    org.hibernate.eclipse.feature,
    org.jboss.ide.eclipse.archives.feature,
    org.jboss.ide.eclipse.as.feature,
    org.jboss.ide.eclipse.freemarker.feature,
    org.jboss.tools.cdi.deltaspike.feature,
    org.jboss.tools.cdi.feature,
    org.jboss.tools.cdi.seam.feature,
    org.jboss.tools.common.jdt.feature,
    org.jboss.tools.community.central.feature,
    org.jboss.tools.community.project.examples.feature,
    org.jboss.tools.forge.feature,
    org.jboss.tools.foundation.feature,
    org.jboss.tools.jmx.feature,
    org.jboss.tools.jsf.feature,
    org.jboss.tools.jst.feature,
    org.jboss.tools.livereload.feature,
    org.jboss.tools.maven.apt.feature,
    org.jboss.tools.maven.cdi.feature,
    org.jboss.tools.maven.feature,
    org.jboss.tools.maven.hibernate.feature,
    org.jboss.tools.maven.jbosspackaging.feature,
    org.jboss.tools.maven.jdt.feature,
    org.jboss.tools.maven.portlet.feature,
    org.jboss.tools.maven.profiles.feature,
    org.jboss.tools.maven.project.examples.feature,
    org.jboss.tools.maven.seam.feature,
    org.jboss.tools.maven.sourcelookup.feature,
    org.jboss.tools.openshift.egit.integration.feature,
    org.jboss.tools.openshift.express.feature,
    org.jboss.tools.portlet.feature,
    org.jboss.tools.project.examples.feature,
    org.jboss.tools.richfaces.feature,
    org.jboss.tools.runtime.core.feature,
    org.jboss.tools.runtime.seam.detector.feature,
    org.jboss.tools.seam.feature,
    org.jboss.tools.stacks.core.feature,
    org.jboss.tools.usage.feature,
    org.jboss.tools.vpe.browsersim.feature,
    org.jboss.tools.vpe.feature,
    org.jboss.tools.ws.feature,
    org.jboss.tools.ws.jaxrs.feature,

Be sure to also update the listing to the latest release version (eg., Beta2 -> CR1)

12. Commit updates to release guide (including this document):

  version=4.1.0.Beta2
  cd ~/truu/doc/release_guide
  topic="release-${version}";branch=master; gw1
  ci "update release guide for ${version}" *2013*JBT*
  gw2;gw3;gw4
  
15. Send email, prepare blogs & announcements

== EMAIL TEMPLATE -- send two emails ==

1. To:
"jbosstools-dev@lists.jboss.org" <jbosstools-dev@lists.jboss.org>

2. To:
jbds-pm-list <jbds-pm-list@redhat.com>
"external-exadel-list@redhat.com" <external-exadel-list@redhat.com>
jboss-announce@redhat.com (optional for major milestones/releases)

version=4.1.0.Beta2
echo "
Subject:

JBoss Tools ${version} is available

Body:

JBoss Tools ${version} is now available.

This is a development release aimed at Eclipse 4.3.0 (Kepler) users.

Eclipse Marketplace:

https://marketplace.eclipse.org/content/jboss-tools-kepler

Update Sites:

http://download.jboss.org/jbosstools/updates/development/kepler/

Installation + Download Pages:

http://www.jboss.org/tools/download
http://www.jboss.org/tools/download/dev/4_1
http://www.jboss.org/tools/download/installation/update_4_1

Requirement Sites:

(These are loaded automatically into Eclipse when installing JBoss Tools from the URLs above. Provided here simply for reference.)

http://download.jboss.org/jbosstools/updates/kepler/
http://download.jboss.org/jbosstools/updates/kepler/extras/

--

New + Noteworthy:

Subject to change, the latest N&N is here:

http://htmlpreview.github.com/?https://raw.github.com/jbosstools/jbosstools-documentation/master/whatsnew/index.html
  and
http://docs.jboss.org/tools/whatsnew/

--

Schedule / Upcoming Releases:

https://issues.jboss.org/browse/JBIDE#selectedTab=com.atlassian.jira.plugin.system.project%3Aversions-panel

---------

Project leads, please tag your projects!

  co jbosstools-${version}x
  git tag jbosstools-${version}
  git push origin jbosstools-${version}

"
